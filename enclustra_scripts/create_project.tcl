#
# create_project.tcl: Tcl script for re-creating Vivado project
#
# Generated by Vivado on Fri Jun 26 14:29:32 +0200 2015
#
#    Modified by diana.ungureanu@enclustra.com

source enclustra_scripts/settings.tcl

set project_base_name ${hw_base_platform}${module_name}

set VivadoVersion 2020

foreach hw_platform $hw_platforms {

    set run_dir "Vivado${part_specific_text}${hw_platform}"
    set project_name ${project_base_name}_${hw_platform}

    # Set the reference directory for source file relative paths (by default the value is script directory path)
    set origin_dir "."
    
    # Set the directory path for the original project from where this script was exported
    set orig_proj_dir "[file normalize "$origin_dir/${run_dir}"]"
    
    # Create project
    create_project ${project_name} ./${run_dir}
    
    # Set the directory path for the new project
    set proj_dir [get_property directory [current_project]]
    
    # Set project properties
    set obj [get_projects ${project_name}]
    set_property "default_lib" "xil_defaultlib" $obj
    set_property "part" "${fpga_part}" $obj
    set_property "simulator_language" "Mixed" $obj
    
    # Create 'sources_1' fileset (if not found)
    if {[string equal [get_filesets -quiet sources_1] ""]} {
    create_fileset -srcset sources_1
    }
    
    # Set 'sources_1' fileset object
    set obj [get_filesets sources_1]
    set files [list "[file normalize "$origin_dir/src/system_top_${hw_platform}.sv"]"]
    add_files -norecurse -fileset $obj $files
    
    
    set file "$origin_dir/src/system_top_${hw_platform}.sv"
    set file [file normalize $file]
    set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
    set_property "file_type" "systemverilog" $file_obj

    #add_files {
    #    ./src/ip/clk_divider_pll/clk_divider_pll.xci \
    #    ./src/ip/clk_wiz_0_b65_mmcm/clk_wiz_0_b65_mmcm.xci \
    #    ./src/ip/clk_wiz_1_b64_b66_pll/clk_wiz_1_b64_b66_pll.xci \
    #}

    # Add amc_carrier_core library 
    add_files { \
        ./lib/amc_carrier_core/Ad9229Core.vhd \
        ./lib/amc_carrier_core/Ad9229Deserializer.vhd \
    }
    set_property "library" "amc_carrier_core" [ get_files { \
        ./lib/amc_carrier_core/Ad9229Core.vhd \
        ./lib/amc_carrier_core/Ad9229Deserializer.vhd \
    }]

    # Add SURF library 
    add_files { \
        ./lib/surf/base/general/rtl/SlvDelay.vhd \
        ./lib/surf/base/ram/xilinx/TrueDualPortRamXpm.vhd \
        ./lib/surf/base/sync/rtl/SynchronizerEdge.vhd \
        ./lib/surf/base/fifo/rtl/inferred/FifoSync.vhd \
        ./lib/surf/base/sync/rtl/SynchronizerOneShotCntVector.vhd \
        ./lib/surf/base/general/rtl/Gearbox.vhd \
        ./lib/surf/base/ram/inferred/DualPortRam.vhd \
        ./lib/surf/base/sync/rtl/SyncTrigRateVector.vhd \
        ./lib/surf/base/general/rtl/TextUtilPkg.vhd \
        ./lib/surf/base/sync/rtl/SyncStatusVector.vhd \
        ./lib/surf/xilinx/general/rtl/DeviceDna.vhd \
        ./lib/surf/base/sync/rtl/SynchronizerVector.vhd \
        ./lib/surf/base/sync/rtl/SynchronizerOneShotCnt.vhd \
        ./lib/surf/base/general/tb/ClkRst.vhd \
        ./lib/surf/base/ram/inferred/SimpleDualPortRam.vhd \
        ./lib/surf/base/general/rtl/CRC32Rtl.vhd \
        ./lib/surf/base/general/rtl/Arbiter.vhd \
        ./lib/surf/base/general/rtl/Crc32.vhd \
        ./lib/surf/base/general/rtl/RstPipelineVector.vhd \
        ./lib/surf/base/general/rtl/PwrUpRst.vhd \
        ./lib/surf/base/sync/rtl/SyncMinMax.vhd \
        ./lib/surf/base/general/rtl/ArbiterPkg.vhd \
        ./lib/surf/base/fifo/rtl/xilinx/FifoXpm.vhd \
        ./lib/surf/base/sync/rtl/SyncTrigPeriod.vhd \
        ./lib/surf/base/general/rtl/PrbsPkg.vhd \
        ./lib/surf/base/sync/rtl/Synchronizer.vhd \
        ./lib/surf/base/sync/rtl/RstSync.vhd \
        ./lib/surf/base/sync/rtl/SyncTrigRate.vhd \
        ./lib/surf/base/fifo/rtl/FifoOutputPipeline.vhd \
        ./lib/surf/base/general/tb/GearboxTb.vhd \
        ./lib/surf/base/general/rtl/Crc32Parallel.vhd \
        ./lib/surf/base/general/rtl/StdRtlPkg.vhd \
        ./lib/surf/base/general/rtl/RstPipeline.vhd \
        ./lib/surf/base/ram/inferred/QuadPortRam.vhd \
        ./lib/surf/base/sync/tb/SynchronizerFifoTb.vhd \
        ./lib/surf/xilinx/general/rtl/ClkOutBufDiff.vhd \
        ./lib/surf/base/fifo/rtl/Fifo.vhd \
        ./lib/surf/base/sync/rtl/SynchronizerOneShotVector.vhd \
        ./lib/surf/base/fifo/rtl/inferred/FifoRdFsm.vhd \
        ./lib/surf/base/general/rtl/Scrambler.vhd \
        ./lib/surf/base/ram/xilinx/SimpleDualPortRamAlteraMfDummy.vhd \
        ./lib/surf/base/sync/rtl/SynchronizerOneShot.vhd \
        ./lib/surf/xilinx/general/rtl/Iprog.vhd \
        ./lib/surf/base/general/rtl/AsyncGearbox.vhd \
        ./lib/surf/base/general/rtl/OneShot.vhd \
        ./lib/surf/base/ram/inferred/TrueDualPortRam.vhd \
        ./lib/surf/base/fifo/rtl/inferred/FifoAsync.vhd \
        ./lib/surf/base/fifo/rtl/FifoMux.vhd \
        ./lib/surf/base/sync/rtl/SyncClockFreq.vhd \
        ./lib/surf/base/sync/tb/SynchronizerOneShotTb.vhd \
        ./lib/surf/base/fifo/rtl/xilinx/FifoAlteraMfDummy.vhd \
        ./lib/surf/base/ram/xilinx/TrueDualPortRamXpmAlteraMfDummy.vhd \
        ./lib/surf/base/sync/rtl/SynchronizerFifo.vhd \
        ./lib/surf/xilinx/general/rtl/ClkOutBufSingle.vhd \
        ./lib/surf/base/general/rtl/Heartbeat.vhd \
        ./lib/surf/base/general/tb/glbl.vhd \
        ./lib/surf/base/general/tb/HeartbeatTb.vhd \
        ./lib/surf/base/general/rtl/SlvDelayFifo.vhd \
        ./lib/surf/base/general/rtl/RegisterVector.vhd \
        ./lib/surf/base/ram/inferred/OctalPortRam.vhd \
        ./lib/surf/base/general/rtl/Debouncer.vhd \
        ./lib/surf/base/fifo/rtl/FifoCascade.vhd \
        ./lib/surf/base/general/rtl/WatchDogRst.vhd \
        ./lib/surf/base/general/rtl/CrcPkg.vhd \
    }
    set_property "library" "surf" [ get_files { \
        ./lib/surf/base/general/rtl/SlvDelay.vhd \
        ./lib/surf/base/ram/xilinx/TrueDualPortRamXpm.vhd \
        ./lib/surf/base/sync/rtl/SynchronizerEdge.vhd \
        ./lib/surf/base/fifo/rtl/inferred/FifoSync.vhd \
        ./lib/surf/base/sync/rtl/SynchronizerOneShotCntVector.vhd \
        ./lib/surf/base/general/rtl/Gearbox.vhd \
        ./lib/surf/base/ram/inferred/DualPortRam.vhd \
        ./lib/surf/base/sync/rtl/SyncTrigRateVector.vhd \
        ./lib/surf/base/general/rtl/TextUtilPkg.vhd \
        ./lib/surf/base/sync/rtl/SyncStatusVector.vhd \
        ./lib/surf/xilinx/general/rtl/DeviceDna.vhd \
        ./lib/surf/base/sync/rtl/SynchronizerVector.vhd \
        ./lib/surf/base/sync/rtl/SynchronizerOneShotCnt.vhd \
        ./lib/surf/base/general/tb/ClkRst.vhd \
        ./lib/surf/base/ram/inferred/SimpleDualPortRam.vhd \
        ./lib/surf/base/general/rtl/CRC32Rtl.vhd \
        ./lib/surf/base/general/rtl/Arbiter.vhd \
        ./lib/surf/base/general/rtl/Crc32.vhd \
        ./lib/surf/base/general/rtl/RstPipelineVector.vhd \
        ./lib/surf/base/general/rtl/PwrUpRst.vhd \
        ./lib/surf/base/sync/rtl/SyncMinMax.vhd \
        ./lib/surf/base/general/rtl/ArbiterPkg.vhd \
        ./lib/surf/base/fifo/rtl/xilinx/FifoXpm.vhd \
        ./lib/surf/base/sync/rtl/SyncTrigPeriod.vhd \
        ./lib/surf/base/general/rtl/PrbsPkg.vhd \
        ./lib/surf/base/sync/rtl/Synchronizer.vhd \
        ./lib/surf/base/sync/rtl/RstSync.vhd \
        ./lib/surf/base/sync/rtl/SyncTrigRate.vhd \
        ./lib/surf/base/fifo/rtl/FifoOutputPipeline.vhd \
        ./lib/surf/base/general/tb/GearboxTb.vhd \
        ./lib/surf/base/general/rtl/Crc32Parallel.vhd \
        ./lib/surf/base/general/rtl/StdRtlPkg.vhd \
        ./lib/surf/base/general/rtl/RstPipeline.vhd \
        ./lib/surf/base/general/rtl/ClockDivider.vhd \
        ./lib/surf/base/ram/xilinx/SimpleDualPortRamXpm.vhd \
        ./lib/surf/base/fifo/rtl/inferred/FifoWrFsm.vhd \
        ./lib/surf/base/ram/inferred/QuadPortRam.vhd \
        ./lib/surf/base/sync/tb/SynchronizerFifoTb.vhd \
        ./lib/surf/xilinx/general/rtl/ClkOutBufDiff.vhd \
        ./lib/surf/base/fifo/rtl/Fifo.vhd \
        ./lib/surf/base/sync/rtl/SynchronizerOneShotVector.vhd \
        ./lib/surf/base/fifo/rtl/inferred/FifoRdFsm.vhd \
        ./lib/surf/base/general/rtl/Scrambler.vhd \
        ./lib/surf/base/ram/xilinx/SimpleDualPortRamAlteraMfDummy.vhd \
        ./lib/surf/base/sync/rtl/SynchronizerOneShot.vhd \
        ./lib/surf/xilinx/general/rtl/Iprog.vhd \
        ./lib/surf/base/general/rtl/AsyncGearbox.vhd \
        ./lib/surf/base/general/rtl/OneShot.vhd \
        ./lib/surf/base/ram/inferred/TrueDualPortRam.vhd \
        ./lib/surf/base/fifo/rtl/inferred/FifoAsync.vhd \
        ./lib/surf/base/fifo/rtl/FifoMux.vhd \
        ./lib/surf/base/sync/rtl/SyncClockFreq.vhd \
        ./lib/surf/base/sync/tb/SynchronizerOneShotTb.vhd \
        ./lib/surf/base/fifo/rtl/xilinx/FifoAlteraMfDummy.vhd \
        ./lib/surf/base/ram/xilinx/TrueDualPortRamXpmAlteraMfDummy.vhd \
        ./lib/surf/base/sync/rtl/SynchronizerFifo.vhd \
        ./lib/surf/xilinx/general/rtl/ClkOutBufSingle.vhd \
        ./lib/surf/base/general/rtl/Heartbeat.vhd \
        ./lib/surf/base/general/tb/glbl.vhd \
        ./lib/surf/base/general/tb/HeartbeatTb.vhd \
        ./lib/surf/base/general/rtl/SlvDelayFifo.vhd \
        ./lib/surf/base/general/rtl/RegisterVector.vhd \
        ./lib/surf/base/ram/inferred/OctalPortRam.vhd \
        ./lib/surf/base/general/rtl/Debouncer.vhd \
        ./lib/surf/base/fifo/rtl/FifoCascade.vhd \
        ./lib/surf/base/general/rtl/WatchDogRst.vhd \
        ./lib/surf/base/general/rtl/CrcPkg.vhd \
    }]

    #############################################
    #
    #
    #create BD creation script
    source enclustra_scripts/${project_base_name}.tcl
    #
    #
    #############################################
    
    
    # Set 'sources_1' fileset properties
    set obj [get_filesets sources_1]
    set_property "top" "system_top" $obj


    # ###

    # Create '${hw_base_platform}${hw_platform}' fileset (if not found)
    if {[string equal [get_filesets -quiet ${hw_base_platform}${hw_platform}] ""]} {
    create_fileset -constrset ${hw_base_platform}${hw_platform}
    }

    # Set '${hw_base_platform}${hw_platform}' fileset object
    set obj [get_filesets ${hw_base_platform}${hw_platform}]
    
    # Add/Import constrs file and set constrs file properties
    set file "[file normalize "$origin_dir/src/${project_base_name}_${hw_platform}.xdc"]"
    set file_added [add_files -norecurse -fileset $obj $file]
    set file "$origin_dir/src/${project_base_name}_${hw_platform}.xdc"
    set file [file normalize $file]
    set file_obj [get_files -of_objects [get_filesets ${hw_base_platform}${hw_platform}] [list "*$file"]]
    set_property "file_type" "XDC" $file_obj
    
    # Set '${hw_base_platform}${hw_platform}' fileset properties
    set obj [get_filesets ${hw_base_platform}${hw_platform}]
    
        
    # #####################
    # Create runs
    # #####################
    
    # Create '${hw_base_platform}${hw_platform}_synth' run (if not found)
    if {[string equal [get_runs -quiet ${hw_base_platform}${hw_platform}_synth] ""]} {
    create_run -name ${hw_base_platform}${hw_platform}_synth -part ${fpga_part} -flow "Vivado Synthesis ${VivadoVersion}" -strategy "Vivado Synthesis Defaults" -constrset ${hw_base_platform}${hw_platform}
    } else {
    set_property strategy "Vivado Synthesis Defaults" [get_runs ${hw_base_platform}${hw_platform}_synth]
    set_property flow "Vivado Synthesis" [get_runs ${hw_base_platform}${hw_platform}_synth]
    }
    set obj [get_runs ${hw_base_platform}${hw_platform}_synth]
    set_property "constrset" "${hw_base_platform}${hw_platform}" $obj
    set_property "part" "${fpga_part}" $obj
    
    
    # Create '${hw_base_platform}${hw_platform}_impl' run (if not found)
    if {[string equal [get_runs -quiet ${hw_base_platform}${hw_platform}_impl] ""]} {
    create_run -name ${hw_base_platform}${hw_platform}_impl -part ${fpga_part} -flow "Vivado Implementation ${VivadoVersion}" -strategy "Vivado Implementation Defaults" -constrset ${hw_base_platform}${hw_platform} -parent_run ${hw_base_platform}${hw_platform}_synth
    } else {
    set_property strategy "Vivado Implementation Defaults" [get_runs ${hw_base_platform}${hw_platform}_impl]
    set_property flow "Vivado Implementation" [get_runs ${hw_base_platform}${hw_platform}_impl]
    }
    set obj [get_runs ${hw_base_platform}${hw_platform}_impl]
    set_property "constrset" "${hw_base_platform}${hw_platform}" $obj
    set_property "part" "${fpga_part}" $obj
    set_property "steps.write_bitstream.args.readback_file" "0" $obj
    set_property "steps.write_bitstream.args.verbose" "0" $obj


    #delete dummy runs created by Vivado
    delete_runs "synth_1 impl_1"
    
    # remove out-of-context (OOC) run
    set_property synth_checkpoint_mode None [get_files  ./${run_dir}/${project_name}.srcs/sources_1/bd/${project_base_name}/${project_base_name}.bd]

    puts "INFO: Project created:${project_name}"

}